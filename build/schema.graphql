type SenderToken @entity {
  id: ID!
  tokenId: BigInt!
  keyword: String!
  isVerified: Boolean!
  contract: String
  senderTokenSupply: Int!
  receiverTokenSupply: Int!
  profilePic: String
  userTokenBalances: [UserTokenBalance!] @derivedFrom(field: "tokenId")
  messages: [Message!] @derivedFrom(field: "tokenId")
}

type User @entity {
  id: ID!
  userTokenBalances: [UserTokenBalance!] @derivedFrom(field: "user")
  messages: [Message!] @derivedFrom(field: "from")
  replies: [Reply!] @derivedFrom(field: "from")
}

type UserTokenBalance @entity {
  id: ID! # Set to `${user.id}-${senderToken.id}`
  user: User!
  tokenId: SenderToken!
  senderTokenBalance: BigInt!
  receiverTokenBalance: BigInt!
}

type Message @entity {
  id: ID!
  from: User!
  tokenId: SenderToken!
  timestamp: String!
  content: String!
  replies: [Reply!] @derivedFrom(field: "belongsTo")
}

type Reply @entity {
  id: ID!
  from: User!
  timestamp: String!
  content: String!
  belongsTo: Message!
}
